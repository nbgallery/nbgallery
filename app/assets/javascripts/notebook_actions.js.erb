$(document).ready(function(){

  /* ===================================== */
  /* ==== Helper Functions/Variables ===== */
  /* ===================================== */
  var pathname = window.location.pathname;
  var id = $('#notebookUUID').val();
  var AUTH_TOKEN = $('meta[name=csrf-token]').attr('content');

  /* ===================================== */
  /* ====== Live Edit Functionality ====== */
  /* ===================================== */
  // Edit Title
  $('form#editTitleForm').on('submit',function(){
    $.ajax({
      url: '/notebooks/' + id + '/title',
      type: 'PATCH',
      headers:{
        Accept: 'application/json'
      },
      data: new FormData($('#editTitleForm')[0]),
      contentType: false,
      processData: false,
      success: function(){
        location.reload();
      },
      error: function(response){
        if (response.responseJSON.message && response.responseJSON.message.length > 0){
          makeAlert('error', '' , 'System encountered an error when trying to save notebook title. ' + response.responseJSON.message);
        }
        else{
          makeAlert('error', '' , 'System encountered an error when trying to save the notebook title. ' + response.responseText);
        }
      }
    });
    return false;
  });
  $('#editTitleButton').click(function(event){
    event.preventDefault();
    if ($('#titleEdit').is(':visible')) return false;
    if ($('#titleEdit').length){
      $('#titleView').toggle();
      $('#titleEdit').toggle();
    }
  });
  $('#titleEditCancel').click(function(event){
    event.preventDefault();
    if ($('#titleView').is(':visible')) return false;
    if ($('#titleView').length){
      $('#titleView').toggle();
      $('#titleEdit').toggle();
    }
  });

  $('#editTitle').keyup(function(){
    maxlength = 250;
    length = this.value.length;
    if (length > 2){
      $('#titleEditSubmit').attr('disabled', false);
    }
    $('#titleEdit .remaining-characters-warning').html( 'Remaining characters: ' + ( maxlength - length ));
    if (maxlength <= length){
      $('#titleEdit .remaining-characters-warning').addClass('error');
    }
    else {
      $('#titleEdit .remaining-characters-warning').removeClass('error');
    }
    if (maxlength - length < 50){
      $('#titleEdit .remaining-characters-warning').css('display','block');
    }
    else {
      $('#titleEdit .remaining-characters-warning').css('display','none');
    }
  })

  // Edit Tags
  if (pathname.indexOf("/nb/") > -1 || pathname.indexOf("/notebook/") > -1 || pathname.indexOf("/notebooks/") > -1){
    $('#tagsEditPencil').click(function(event){
      event.preventDefault();
      if ($('#tagsEdit').is(':visible')) return false;
      $('#tagsDisplay').toggle();
      $('#tagsEdit').toggle();
      $.ajax({
        method: 'GET',
        url: '/tags',
        headers: {
          Accept: 'application/json'
        },
        success: function(json){
          $('#editTags').tokenfield({
            minLength: 0,
            delimiter: [',',' ','_','$',';','.','@','#','%','^','&','(',')','*','!','"',"'"],
            showAutocompleteOnFocus: true,
            autocomplete:{
              source: json,
              delay: 100,
              minLength: 2
            }
          });
        },
        error: function(response){
          makeAlert('error', '' , 'System encountered an error when trying to edit tags. ' + response.responseText);
        }
      });
    });
  }
  $('#tagsEditCancel').click(function(event){
    event.preventDefault();
    $('#tagsDisplay').toggle();
    $('#tagsEdit').toggle();
  });
  $('#tagsEditSubmit').click(function(){
    var data = $('#tagsEditForm').serialize();
    $.ajax({
      url: '/notebooks/' + id + '/tags',
      type: 'PATCH',
      headers: {
        Accept: 'application/json'
      },
      data: data,
      success: function(){
        location.reload();
      },
      error: function(response){
        if (response.responseJSON["errors"] && Object.keys(response.responseJSON["errors"]).length > 0){
          errorMessage = "";
          console.log(response.responseJSON["errors"]);
          console.log(Object.keys(response.responseJSON["errors"]));
          Object.keys(response.responseJSON["errors"]).forEach(field => {
            console.log(field);
            if(errorMessage.length>0){
              errorMessage = errorMessage + "<br />";
            }
            errorMessage = errorMessage + response.responseJSON["errors"][field];
            console.log(response.responseJSON["errors"][field]);
          });
          makeAlert('error', '' , 'System encountered an error when trying to save notebook tags. ' + errorMessage);
        }else if (response.responseJSON["message"].length>0) {
          makeAlert('error', '' , 'System encountered an error when trying to save notebook tags. ' + response.responseJSON["message"]);
        }else{
          makeAlert('error', '' , 'System encountered an error when trying to save notebook tags. ' + response.responseText);
        }
      }
    });
    return false;
  });

  // Edit Description
  $(document).on('description_editable',function(event, original){
    if (original != null){
      $('#descriptionError').addClass('hidden');
      return true;
    } else {
      $('#descriptionError').removeClass('hidden');
      $('#descriptionError').text('Description can not be blank.');
      return false;
    }
  });
  $('#editDescription').click(function(event){
    event.preventDefault();
    $('#descriptionEditForm').toggle();
    $('#descriptionView').toggle();
  });
  $('#descriptionEditCancel').click(function(event){
    event.preventDefault();
    $('#descriptionEditForm').toggle();
    $('#descriptionView').toggle();
  });
  $('#descriptionEditSubmit').click(function(){
    var data = $('#descriptionField').val();
    $.ajax({
      url: '/notebooks/' + id + '/description',
      type: 'PATCH',
      headers: {
        Accept: 'application/json'
      },
      data: {description:data},
      success: function(){
        location.reload();
      },
      error: function(response){
        if (response.responseJSON.message && response.responseJSON.message.length > 0){
          makeAlert('error', '' , 'System encountered an error when trying to save description. ' + response.responseJSON.message);
        }
        else {
          makeAlert('error', '' , 'System encountered an error when trying to save notebook description. ' + response.responseText);
        }
      }
    });
    return false;
  });

  /* ===================================== */
  /* ======== External Resourses ========= */
  /* ===================================== */
  /* ===== Add External Resource ===== */
  $('#addExternalResource').click(function(e){
    e.preventDefault();
    $('#addResourceModal').modal();
  });
  $('#addResourceForm').on('submit',function(){
    $('#addResourceFormSubmit').attr('disabled', true);
    var url = '/notebooks/' + id + '/resource';
    var data = 'href=' + $('#newResourceHref').val() + "&title=" + $("#newResourceTitle").val();
    loadingGif();
    $.ajax({
      url: url,
      data: data,
      type: 'POST',
      success: function(){
        $('#addResourceModal').modal('hide');
        location.reload();
      },
      error: function(response){
        makeAlert('error', '#addResourceModal .alert-container' , 'System encountered an error when trying to add external resource. ' + response.statusText);
      },
    });
    return false;
  });

  /* ===== Delete External Resource ===== */
  $('.external-resources .delete-icon').on('click',function(e){
    e.preventDefault();
    $('#confirmationModal').modal('show');
    $('#confirmationModalForm').removeClass().addClass('delete-resource');
    let text = 'Delete the resource: "' + $(this).attr('data-resource-title') +  '" from notebook: "' + $(this).attr('data-notebook') + '".'
    $('#additional-confirmation p').text();
    $('#confirmation1').text(text);
    $('#confirmationModalForm #inAdditionText').addClass('hide').siblings('.additional-confirmation').addClass('hide');
    $('#hiddenConfirmationMetadata').val($(this).attr('data-path'));

    $('#confirmationModalForm.delete-resource').on('submit', function(){
      loadingGif();
      let url = $('#hiddenConfirmationMetadata').val();
      $('#confirmationModal').modal('hide');
      $.ajax({
          url: url,
          type: 'DELETE',
          success: function(response){
            location.reload();
          },
          error: function(response){
            makeAlert('error', '' , 'System encountered an error when trying to delete external resource. ' + response);
          }
      });
      return false;
    });

    return false;
  });

  /* ===== Resource Validator ===== */
  /* Not perfect but makes sure things start cleanly and supports both IP and domain name based URLs */
  var testHref = new RegExp("^https?:\\/\\/" +
                          "((([a-z\\d-]+\\.)+(a-z){2,})||((\\d{1,3}\\.){3}\\d{1,3}))" +
                          "(\\:\\d+)?");
  $('#newResourceTitle').on('change',function(){
    validateNewResource();
  });
  $('#newResourceTitle').on('keydown',function(){
    validateNewResource();
  });
  $('#newResourceHref').on('change',function(){
    validateNewResource();
  });
  $('#newResourceHref').on('keydown',function(){
    validateNewResource();
  });

  function validateNewResource(){
    if ($('#newResourceTitle').val().length > 0 && $('#newResourceHref').val().length > 11 && testHref.test($('#newResourceHref').val())){
      $('#addResourceFormSubmit').attr('disabled',false);
    }
    else {
      $('#addResourceFormSubmit').attr('disabled',true);
    }
  }

  /* ===================================== */
  /* =========== Change Owner ============ */
  /* ===================================== */
  $('#changeOwnerForm').on('submit',function(){
    $('#changeOwnerModalSubmit').attr('disabled', true);
    var url = '/notebooks/' + id + '/owner';
    var data = 'owner=' + $('#newOwner').data('value');
    loadingGif();
    $.ajax({
      url: url,
      data: data,
      type: 'PATCH',
      success: function(){
        $('#changeOwnerModal').modal('hide');
        location.reload();
      },
      error: function(response){
        makeAlert('error', '' , '<strong>Error: </strong>' + response.responseText);
      },
    });
    return false;
  });

  /* ===================================== */
  /* ==== Sharing Notebook Ownership ===== */
  /* ===================================== */
  $('#sharingForm').on('submit', function(e){
    $('#sharingModalSubmit').attr('disabled', true);
    loadingGif();
    $.ajax({
      url: '/notebooks/' + id + '/shares',
      type: 'PATCH',
      data: new FormData($('#sharingForm')[0]),
      cache: false,
      contentType: false,
      processData: false,
      success: function(){
        $('#sharingModal').modal('hide');
        location.reload();
      },
      error: function(response){
        $('#sharingModalSubmit').attr('disabled', false);
        if (response.responseJSON.message == "shares must be valid usernames"){
          if (response.responseJSON.errors.length > 1){
            makeAlert('error', '#sharingForm .alert-container', '<strong>Error:</strong> "' + response.responseJSON.errors.join(', ') + '" are not valid usernames. Please make sure you are entering the user\'s username correctly and not using their email.');
          }
          else {
            makeAlert('error', '#sharingForm .alert-container', '<strong>Error:</strong> "' + response.responseJSON.errors.join() + '" is not a valid username. Please make sure you are entering the user\'s username correctly and not using their email.');
          }
        }
        else {
          makeAlert('error', '#sharingForm .alert-container', '<strong>Error:</strong> ' + response.responseText);
        }
      }
    });
    return false;
  });

  $('#sharingModal').on('show.bs.modal',function(){
    $('#shareWithEmail').tokenfield({
      minLength: 0,
      showAutocompleteOnFocus: true,
      delimiter: [',',' ','$',';','#','%','^','&','(',')','*','!'],
      autocomplete:{
        source: function(request, response){
          $.ajax({
            method: 'GET',
            url: '/users',
            headers: {
              Accept: 'application/json'
            },
            data:{
              prefix: request.term
            },
            success: function(data){
              response(data);
            },
            error: function(response){
              makeAlert('error', '#sharingForm .alert-container' , 'Error loading list of all users: ' + response.responseText);
            }
          })
        },
        delay: 100,
        minLength: 3,
        autoFocus: true
       }
    });
    var seconds = new Date().getTime()/1000;
    $.ajax({
      method: 'GET',
      url: '/notebooks/' + id + '/shares?seconds=' + seconds,
      headers: {
        Accept: 'application/json'
      },
      success: function(json){
        $('#shareWithEmail').tokenfield('setTokens', json['shares']);
      },
      error: function(){
        makeAlert('error', '#sharingForm .alert-container' , 'Action failed: ' + response.statusText);
      }
    });
  });

  /* ===================================== */
  /* ========== Email Notebook =========== */
  /* ===================================== */
  $('#emailNotebook').on('click',function(e){
    e.preventDefault();
    loadingGif();
    $.ajax({
      method: 'GET',
      url: '/notebooks/' + id + '/friendly_url',
      headers: {
        Accept: 'application/json'
      },
      success: function(json){
        var subject = "(U) Check out this notebook in the <%=GalleryConfig.site.name%>";
        var body = 'This notebook is awesome. Check it out:   ' + json.friendly_url;
        window.location.href = 'mailto:?subject=' + subject + '&body=' +body;
      },
      error: function(response){
        makeAlert('error', '' , 'Action failed: ' + response.statusText);
      }
    });
  });

  /* ===================================== */
  /* ======== Starring Notebooks ========= */
  /* ===================================== */
  var busy = false;
  $('#starToggle').click(function(e){
    e.preventDefault();
    if (busy) return false;
    busy = true;
    var self = $(this);
    var url = '/star/' + id;
    $(this).addClass('blockSpinner');
    $.ajax({
      url: '/notebooks/' + id + '/star?star=' + ($('#starToggle > i.action-icon').hasClass('fa-star-o') ? 'true' : 'false'),
      type: 'PATCH',
      success: function(){
        self.removeClass('blockSpinner');
        $('#starToggle > i.action-icon').toggleClass('fa-star-o').toggleClass('fa-star');
        $('#starToggle > i.action-icon').attr('title',$('#starToggle > i.action-icon').find('i').hasClass('fa-star-o') ? 'Star this notebook' : 'Unstar this notebook');
        $('#starToggle').tooltipster('content',$('#starToggle > i.action-icon').hasClass('fa-star-o') ? 'Star this notebook' : 'Unstar this notebook');
        makeAlert('success','',$('#starToggle > i.action-icon').hasClass('fa-star-o') ? 'Successfully unstarred this notebook' : 'Successfully starred this notebook')
        busy = false;
      },
      error: function(response){
        self.removeClass('blockSpinner');
        makeAlert('error', '' , 'Failed to toggle starring of notebook: ' + response.statusText);
        busy = false;
      }
    });
  });

  /* ===================================== */
  /* ====== Toggle Public/Private ======== */
  /* ===================================== */
  $('#publicToggle').click(function(e){
    e.preventDefault();
    var self = $(this);
    var url = '/public/' + id;
    loadingGif();
    $.ajax({
      url: '/notebooks/' + id + '/public?public=' + ($('#publicToggleText').text() == 'Make private' ? 'false' : 'true'),
      type: 'PATCH',
      headers: {
        Accept: 'application/json'
      },
      success: function(){
        self.removeClass('blockSpinner');
        $('#publicToggleIcon').toggleClass('fa-lock').toggleClass('fa-globe');
        $('#publicToggleText').text($('#publicToggleText').text() == 'Make Private' ? 'Make Public' : 'Make Private');
        location.reload();
      },
      error: function(response){
        if (response.responseJSON.message && response.responseJSON.message.length > 0){
          makeAlert('error', '' , 'System encountered an error when trying to change the notebook visibility. ' + response.responseJSON.message);
        }
        else {
          makeAlert('error', '' , 'System encountered an error when trying to change the notebook visibility. ' + response.responseText);
        }
      }
    });
  });

  /* ===================================== */
  /* ========= Delete Notebook =========== */
  /* ===================================== */
  $('#deleteNotebook').on('click',function(){
    var title = $(this).attr('data-notebook-title')
    $('#confirmationModal').modal('show');
    $('#confirmationModalForm').removeClass().addClass('delete-notebook');
    var text = 'Delete the notebook: "' + title +  '". This will NOT be recoverable.'
    $('#confirmation1').text(text);
    $('#inAdditionText').removeClass('hide');
    $('#confirmation2').text('All of notebook\'s comments will be deleted.').parent().removeClass('hide');
    $('#confirmation3').text('All of notebook\'s metrics will be deleted.').parent().removeClass('hide');
    $('#confirmation4').text('All of notebook\'s revisions will be deleted.').parent().removeClass('hide');
    $('#confirmation5').text('All of notebook\'s reviews will be deleted.').parent().removeClass('hide');
    $('#confirmation6').text('All of notebook\'s pending and previous change requests will be deleted.').parent().removeClass('hide');
    $('#hiddenConfirmationMetadata').val(id);

    $('#confirmationModalForm.delete-notebook').on('submit', function(){
      loadingGif();
      $('#confirmationModal').modal('hide');
      $.ajax({
          url: '/notebooks/' + id,
          type: 'DELETE',
          success: function(response){
            window.location=response.forward;
          },
          error: function(response){
            makeAlert('error', '', 'You had an error! ' + response.statusText);
          }
      });
      return false;
    });

    return false;
  });

  /* ===================================== */
  /* ======== Deprecate Notebook ========= */
  /* ===================================== */
  $('#deprecateNotebookForm').on('submit',function(){
    $('#deprecateNotebookSubmit').attr('disabled', true);
    var url = '/notebooks/' + id + '/deprecate';
    var alternatives = $('#deprecateNotebookForm .tokenfield .token').map(function(){
      return $(this).data("id");
    }).get().join(',');
    var data = $('#deprecateNotebookForm').serialize() + "&alternatives=" + alternatives;
    loadingGif();
    $.ajax({
      url: url,
      data: data,
      type: 'POST',
      success: function(){
        $('#deprecateNotebookModal').modal('hide');
        location.reload();
      },
      error: function(response){
        $('#deprecateNotebookErrorWarning').html('<strong>Error: </strong>' + response.responseText);
        $('#deprecateNotebookErrorWarning').attr('hidden',false);
      },
    });
    return false;
  });
  $('.remove-deprecation-status').on('click',function(e){
    e.preventDefault();
    var url = '/notebooks/' + id + '/remove_deprecation_status';
    var data = 'notebook_id=' + $('#notebookID').text() + 'revision_id=' + $('#revisionID').text()
    loadingGif();
    $.ajax({
      url: url,
      data: data,
      type: 'POST',
      success: function(){
        location.reload();
      },
      error: function(response){
        if ($('#deprecateNotebookModal').is(':visible')){
          makeAlert('error', '#deprecateNotebookModal .alert-container', 'You had an error! ' + response.statusText);
        }else{
          makeAlert('error', '' , 'You had an error! ' + response.statusText);
        }
      },
    });
    return false;
  });

  // Disable/Enable hack for submit button. Remove once over to Rails 5, is default behavior in 5.
  $('#freezeNotebook').on('change', function(){
    if ($('.remove-deprecation-status').length){
      $('#deprecateNotebookSubmit').attr('disabled', false);
    }
  });
  if ($('#deprecateNotebookReasoning').value == null){
    $('#deprecateNotebookSubmit').attr('disabled', true);
  }
  $('#deprecateNotebookReasoning').keyup(function(){
    maxlength = 500;
    length = this.value.length;
    if (length > 2){
      $('#deprecateNotebookSubmit').attr('disabled', false);
    }
    $('#deprecateNotebookForm .remaining-characters-warning').html( 'Remaining characters: ' + ( maxlength - length ));
    if (maxlength <= length){
      $('#deprecateNotebookForm .remaining-characters-warning').addClass('error');
    }
    else {
      $('#deprecateNotebookForm .remaining-characters-warning').removeClass('error');
    }
    if (maxlength - length < 50){
      $('#deprecateNotebookForm .remaining-characters-warning').css('display','block');
    }
    else {
      $('#deprecateNotebookForm .remaining-characters-warning').css('display','none');
    }
  })

  /* ===================================== */
  /* ========== Propose Review =========== */
  /* ===================================== */
  $('#proposeReviewForm').on('submit',function(){
    $('#proposeReviewSubmit').attr('disabled', true);
    var url = '/notebooks/' + id + '/submit_for_review';
    var data = $('#proposeReviewForm').serialize();
    console.log(data);
    $.ajax({
      url: url,
      data: data,
      type: 'POST',
      success: function(){
        location.reload();
      },
      error: function(response){
        makeAlert('error', '#proposeReviewModal .alert-container', '<strong>Error: </strong>' + response.statusText);
      },
    });
    return false;
  });

  /* ===================================== */
  /* ========= Provide Feedback ========== */
  /* ===================================== */
  $('#notebookFeedback').click(function(){
    $('#feedbackModal').modal('show');
    return false;
  });
  $('#runNotebookYes').click(function(){
    $('#workedFeedback').attr('hidden',false);
    if ($('#workedNo').prop('checked')){
      $('#broken').attr('hidden',false);
      $('#brokenFeedback').attr('required',true);
    }
  });
  $('#runNotebookNo').click(function(){
    $('#workedFeedback').attr('hidden',true);
    $('#broken').attr('hidden',true);
    $('#brokenFeedback').attr('required',false);
  });
  $('#workedNo').click(function(){
    $('#broken').attr('hidden',false);
    $('#brokenFeedback').attr('required',true);
  });
  $('#workedYes').click(function(){
    $('#broken').attr('hidden',true);
    $('#brokenFeedback').attr('required',false);
  });
  $('#feedbackForm').on('submit',function(){
    url = '/notebooks/' + id + '/feedback';
    $('#feedbackSubmit').attr('disabled',true);
    $('#feedbackProgressBar').html('<div class="progress progress-striped active"><div class="progress-bar" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="90" style="width: 100%">')
    $.ajax({
      url: url,
      type: 'POST',
      data: new FormData($('#feedbackForm')[0]),
      cache: false,
      contentType: false,
      processData: false,
      success: function(notebook_id){
        $('#feedbackModal').modal('hide');
        location.reload();
      },
      error: function(response){
        $('#feedbackSubmit').attr('disabled',false);
        $('#feedbackProgressBar').html('');
        makeAlert('error', '#feedbackForm .alert-container', 'There was an error submitting feedback - sorry! ' + response.responseText);
      },
    });
    return false;
  });


  /* ===================================== */
  /* = Staging/Uploading/Change Requests = */
  /* ===================================== */
  // Determine if the user is clicking a change request or submitting new version and adjust the shared modals accordingly
  $('#submitChangeRequest').on('click',function(){
    $('#eventType').val('change');
    $('#editModalTitle').text('Propose Change Request - 1 of 2');
    $('#editTagsSection').hide();
    $('#stageChangeRequestComment').show();
    $('#stageCurrentVersionLabel').hide();
    $('#stageVersionLabel').hide();
  });

  // Part 1 of submit change request or upload new version - this is only applicable to the Gallery UI
  $('#editNotebook').on('click',function(){
    $('#eventType').val('edit');
    $('#editModalTitle').text('Upload New Version of This Notebook - 1 of 2');
  });
  $('#editUploadForm').validator().on('submit', function(e){
    if (!e.isDefaultPrevented()){
      $('#editUploadSubmit').attr('disabled', true);
      var type = $('#eventType').val();
      $('#stageEditModalTitle').text((type == 'change') ? 'Propose Change Request - 2 of 2' : 'Upload New Version of This Notebook - 2 of 2')
      var url = '/stages?id=' + id;
      loadingGif();
      $.ajax({
        url: url,
        type: 'POST',
        data: new FormData($('#editUploadForm')[0]),
        cache: false,
        contentType: false,
        processData: false,
        success: function(stagingResponse){
          $('#editStagingID').val(stagingResponse['staging_id']);
          $('#editNotebookModal').modal('hide');
          $('#stageEdit').modal('show');
        },
        error: function(response){
          var dirty = "dirty_words";
          if (response.responseText.indexOf(dirty) >= 0){
            dirtyWordCheck(response,'#editUploadErrorWarning','#editUploadSubmit');
          }
          else {
            $('#editUploadErrorWarning').html('<strong>Error: </strong>' + response.responseText);
            $('#editUploadSubmit').attr('disabled', false);
          }
        }
      });
      return false;
    }
  });

  // Intermediate step in the change request or upload new version - this helps prepopulate and configure the modal
  $('#stageEdit').on('show.bs.modal',function(){
    document.addEventListener('keydown', autoSize($('stageEdit textarea')));
    $.ajax({
      method: 'GET',
      url: '/stages/' + $('#editStagingID').val() + '/preprocess',
      headers: {
        Accept: 'application/json'
      },
      success:function(response){
        $(document).trigger("edit_stage_success", response);
        $.ajax({
          method: 'GET',
          url: '/tags',
          headers: {
            Accept: 'application/json'
          },
          success: function(json){
            $('#editStageTags').tokenfield({
              minLength: 0,
              delimiter: [',',' ','_','$',';','.','@','#','%','^','&','(',')','*','!','"',"'"],
              showAutocompleteOnFocus: true,
              autocomplete:{
                source: json,
                delay: 100,
                minLength: 2
              }
            });
          },
          error: function(response){
            makeAlert('error', '#stageEdit .alert-container', '<strong>Error: </strong>' + response.responseText);
          }
        });
      },
      error: function(response){
        makeAlert('error', '#stageEdit .alert-container', '<strong>Error: </strong>' + response.responseText);
      }
    });
  });

  // Final step in the change request and upload new version - this is modal 2 of 2 and this applies to BOTH the gallery UI and users coming in from personal Jupyter
  $('#stageEditForm').validator().on('submit', function(e){
    if (!e.isDefaultPrevented()){
      $('#editStageSubmit').attr('disabled', true);
      var type = $('#eventType').val();
      var url = (type =='change') ? '/change_requests/' + '?notebook_id=' + id + '&staging_id=' + $('#editStagingID').val() : '/notebooks/' + id + '?staging_id=' + $('#editStagingID').val();
      var data = new FormData($('#stageEditForm')[0]);
      loadingGif();
      $.ajax({
        url: url,
        type: ((type=='change') ? 'POST' : 'PUT'),
        data: data,
        cache: false,
        contentType: false,
        processData: false,
        success: function(response){
          $('#stageEdit').modal('hide');
          if (type=='change'){
            window.location.replace(window.location.origin + window.location.pathname);
          }
          else {
            $('#stageEdit').modal('hide');
            window.location.replace(response.friendly_url);
          }
        },
        error: function(response){
          var dirty ="dirty_words";
          if (response.responseText.indexOf(dirty) >= 0){
            dirtyWordCheck(response,'#editUploadErrorWarning','#editUploadSubmit');
          }
          else {
            let message = response.responseText;
            if (response.responseJSON.message != null) {
              message = response.responseJSON.message;
            }
            makeAlert('error', '#stageEdit .alert-container', '<strong>Error: </strong>' + message);
            $('#editStageSubmit').attr('disabled', false);
          }
        }
      });
      return false;
    }
  });

  // This catches users coming in from personal Jupyter instance or viewing a comment
  var target = document.location.hash.replace('#','');
  if (target.length){
    if (target == 'UPDATE'){
      $('#stageEdit').modal('show');
      $('#eventType').val('edit');
      $('#stageEditModalTitle').text('Upload New Version of Notebook');
    }
    else if (target == 'CHANGE_REQ'){
      $('#stageEdit').modal('show');
      $('#eventType').val('change');
      $('#stageEditModalTitle').text('Propose Change Request');
      $('#editTagsSection').hide();
      $('#stageChangeRequestComment').show();
      $('#stageCurrentVersionLabel').hide();
      $('#stageVersionLabel').hide();
    }
    else if (target.startsWith('comment')){
      $('#commentsModal').modal('show');
    }
  }

  /* ===================================== */
  /* ========= Copy to Clipboard ========= */
  /* ===================================== */
  $('.copy-to-clipboard').click(function() {
    if (navigator.clipboard && window.isSecureContext){
      navigator.clipboard.writeText($(this).data('copy')).then(function () {
        makeAlert('success', '#' + $(this).data('alertlocation'), 'Copied to clipboard!');
      }, function () {
        makeAlert('error', '#' + $(this).data('alertlocation'), 'Failed to copy. Make sure you are using a modern browser. Please contact support if the issue continues.');
      });
    }
    else {
      makeAlert('error', '#' + $(this).data('alertlocation'), 'Failed to copy. Copy to clipboard only works for HTTPS sites for security.');
    }
  });

});
