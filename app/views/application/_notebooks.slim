-if params[:q] != nil
  div.content-container.mobile-expanding
    div.carousel-inner
      div.item.active
        ==image_tag('nbgallery_banner.png')
        div.content-container
          div.carousel-caption
            h1 class=(params[:q].length > 25? "long-title" : "") Search: "#{params[:q]}"
-if @notebooks.empty?
  div.content-container
    h1.no-notebooks
      div.sad-face
        | :-(
      | Sorry, no notebooks found
-else
  div.content-container
    div.searchResults
      table id="searchTable"
        tr
          -if @tags != nil && @tags.length > 0
            th.searchHeader Tags
          th.searchHeader Total Notebooks
          -if @groups != nil && @groups.length > 0
            th.searchHeader Groups
          th.searchHeader Sort
        tr
          -if @tags != nil && @tags.length > 0
            td.sortData
              -unless @tags.blank?
                -@tags.each do |tag, count|
                  a.searchTag href="/tags/#{tag}"
                    span.label.tag style ='background-color: #{color_for(tag)}' =tag
          td.sortData
            input type='hidden' id='sortHidden' value="#{params[:sort] || 'trendiness'}"
            -counter = ((params['page']&.to_i || 1) - 1) * Notebook.per_page
            -total = defined?(@notebooks.total_entries) ? @notebooks.total_entries : '?'
            -unless @notebooks.empty? or defined? suggested_view
              p #{@notebooks.total_entries} notebooks
          -if @groups != nil && @groups.length > 0
            td.sortData
              -unless @groups.blank?
                ul.groupSearches
                  -@groups.first(3).each do |group, count|
                    li.groupSearchResults
                      a.searchResultsGroup href="#{url_for(group)}"
                        span.tooltips.join title="#{count} notebooks = #{group.description}" #{group.name}
          td.sortData
            -unless @notebooks.empty? or defined? suggested_view
              form id='sortResultsForm' method='get'
                select.form-control.sortDropDown id='sort' name='sort'
                  option value='trendiness' id='trendiness' Trending
                  option value='created_at' id='created_at' Recently Created
                  option value='updated_at' id='updated_at' Recently Updated
                  option value='title' id='title' Title
                  option value='views' id='views' Most Views
                  option value='stars' id='stars' Most Stars
                  option value='runs' id='runs' Most Runs
                  option value='score' id='score' Relevance
                -params.each do |key, value|
                  -next if %w(id sort ascending splat captures controller action partial_name).include?(key)
                  input type='hidden' name==key value==CGI.escape_html(value)

    table.content.table-responsive id='nbTable'
      -@notebooks.each do |nb|
        -@exec_history = nb.execution_history
        tr
          td
            div
              div.title-wrapper
                ==render partial: 'language_icons', locals: { notebook: nb }
                ==render partial: GalleryConfig.slim.table_nb_title, locals: { nb: nb }
                -status = review_status(nb)
                -if status == :full
                  a.nounderline href="#{reviews_notebook_path(nb)}"
                    ==image_tag('verified-badge.png', class: 'tooltips verified-icon', title: review_status_string(nb))
                -elsif status == :partial
                  a.nounderline href="#{reviews_notebook_path(nb)}"
                    ==image_tag('verified-badge-grayed.png', class: 'tooltips verified-icon', title: review_status_string(nb))
                div.sparkline #{(1..30).map{ |i| @exec_history.fetch(i.days.ago.to_date, 0)}.reverse.join(',') }
                div.ribbon-wrapper
                  div.github-fork-ribbon
                    a.run_jupyter href="#/notebook/#{nb.uuid}" Run in Jupyter
                    input type='hidden' value="#{(defined?(ref) && !ref.blank? ? ('?ref=' + ref) : '')}"
              hr.divider
              ==render partial: GalleryConfig.slim.table_nb_description, locals: { nb: nb }
              div.rankings-author-container
                -if defined? group_view
                  ==render partial: 'nb_stats', locals: { notebook: nb, group_view: true }
                -else
                  ==render partial: 'nb_stats', locals: { notebook: nb }
                a href="#{metrics_notebook_path(nb)}#metricsHealth" class='tooltips'   title="#{nb.notebook_summary.health_description}"
                  -if nb.unhealthy?
                    span.fa.fa-medkit.action-icon.view-summary.health.unhealthy
                  -elsif nb.healthy?
                    span.fa.fa-medkit.action-icon.view-summary.health.healthy
                  -else
                    span.fa.fa-medkit.action-icon.view-summary.health.healthUnknown
              div.owner_footer
                span.table_footer Owner:
                -if nb.owner.is_a? User
                  ==render partial: 'author_rep_trophy_icon', locals: {author: nb.owner}
                  a.tooltips href="#{user_path(nb.owner)}" title="#{nb.owner.first_name} #{nb.owner.last_name} (#{nb.owner.org})" =nb.owner.name
                -else
                  a.tooltips href="#{group_path(nb.owner)}" title="Group: #{nb.owner.name}" =nb.owner.name
                -if (nb.created_at + 2.seconds) > nb.content_updated_at
                  span.table_footer_authored
                    ' Created:
                  time.tooltips.tooltip-right.tooltipstered title="#{nb.created_at.strftime("%A, %B %d, %Y %H:%M UTC")}"
                    | #{time_ago_in_words(nb.created_at)} ago
                  '  by
                  ==render partial: 'author_rep_trophy_icon', locals: {author: nb.creator}
                  a.tooltips href="#{user_path(nb.creator)}" title="#{nb.creator.first_name} #{nb.creator.last_name} (#{nb.creator.org})" =="#{nb.creator.first_name} #{nb.creator.last_name}"
                -else
                  span.table_footer_authored Last updated:
                  -@revisions = nb.revision_list(@user)
                  -(@revisions + [nil]).each_cons(2) do |rev, previous|
                    -if previous && rev.commit_id != previous.commit_id
                      -most_recent_comparison_path = diff_notebook_revision_path(nb, previous, revision: rev.commit_id)
                      a.update-link.tooltips.tooltipstered href="#{most_recent_comparison_path}" title="Notebook version (diff) comparison highlighting recent changes made"
                        span.glyphicon.glyphicon-edit.tooltips.nounderline
                      -break
                  time.tooltips.tooltip-right.tooltipstered title="#{nb.content_updated_at.strftime("%A, %B %d, %Y %H:%M UTC")}"
                    |  #{time_ago_in_words(nb.content_updated_at)} ago
                  '  by
                  ==render partial: 'author_rep_trophy_icon', locals: {author: nb.updater}
                  a.tooltips href="#{user_path(nb.updater)}" title="#{nb.updater.first_name} #{nb.updater.last_name} (#{nb.updater.org})" =="#{nb.updater.first_name} #{nb.updater.last_name}"
              hr.divider
                -unless nb.snippet(@user).blank?
                  div id='snippetInfo' ==nb.snippet(@user)
              div.tagRow
                -nb.tags.first(10).each do |tag|
                  a href="/tags/#{tag.tag}"
                    span.label.tag style='font-size: 13px; font-family: calibri; color: #fff; background-color: #{color_for(tag.tag)}' =tag.tag
                -if nb.tags.size > 10
                  a href="#{url_for(nb)}"
                    span.label.tag style='color: white; background-color: #000' ...

    -if @notebooks.respond_to? :total_pages
      nav.text-center
        -if request.path != "/beta_home_notebooks"
          ==will_paginate @notebooks, renderer: BootstrapPagination::Rails
        -elsif @notebooks.length >= 20
          ul.pagination
            li.next
              -param = request.original_fullpath.split('?')[1]
              -if param == "type=mine"
                a rel="next" href="#{user_path(@user)}?page=2" See More
              -elsif param == "type=recent"
                a rel="next" href="/notebooks?page=2&sort=created_at" See More
              -elsif param == "type=stars"
                a rel="next" href="/notebooks/stars/?page=2&sort=stars" See More
              -else
                a rel="next" href="/notebooks?page=2&#{param}" See More
